name: Run Tests

on:
  pull_request:
    branches: [ main, master ]
  push:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: test_password
          MYSQL_DATABASE: test_restaurant_db
          MYSQL_USER: test_user
          MYSQL_PASSWORD: test_password
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -h localhost"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Wait for MySQL to be ready
      run: |
        until mysqladmin ping -h"127.0.0.1" -P3306 -uroot -ptest_password --silent; do
          echo "Waiting for MySQL..."
          sleep 2
        done
        echo "MySQL is ready!"
    
    - name: Set up test database
      env:
        DB_HOST: 127.0.0.1
        DB_PORT: 3306
        DB_USER: root
        DB_PASSWORD: test_password
        DB_NAME: test_restaurant_db
        TESTING: true
      run: |
        mysql -h 127.0.0.1 -P 3306 -u root -ptest_password -e "CREATE DATABASE IF NOT EXISTS test_restaurant_db;"
        mysql -h 127.0.0.1 -P 3306 -u root -ptest_password -e "CREATE USER IF NOT EXISTS 'test_user'@'%' IDENTIFIED BY 'test_password';"
        mysql -h 127.0.0.1 -P 3306 -u root -ptest_password -e "GRANT ALL PRIVILEGES ON test_restaurant_db.* TO 'test_user'@'%';"
        mysql -h 127.0.0.1 -P 3306 -u root -ptest_password -e "FLUSH PRIVILEGES;"
        python scripts/setup_test_db.py
    
    - name: Run unit tests (mocked)
      env:
        TESTING: true
      run: |
        python -m pytest tests/test_api.py tests/test_simple.py -v --tb=short
    
    - name: Run integration tests (real database)
      env:
        DB_HOST: 127.0.0.1
        DB_PORT: 3306
        DB_USER: test_user
        DB_PASSWORD: test_password
        DB_NAME: test_restaurant_db
        TESTING: true
      run: |
        python -m pytest tests/test_integration.py -v --tb=short